{"version":3,"sources":["components/quote/Quote.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Quote","text","autor","color","handleClick","linkTwitter","linkTmblr","className","style","id","href","backgroundColor","onClick","App","useState","Math","random","setColor","setAutor","data","setData","quote","setQuote","randomIndex","useEffect","fetch","then","response","json","author","floor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAmCeA,G,YA/BD,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,YACzBC,EAAW,iEAA6DJ,EAA7D,eAAwEC,GAQnFI,EAAS,2EAAuEJ,EAAvE,oBAAwFD,EAAxF,4FACf,OACQ,sBAAKM,UAAU,UAASC,MAAS,CAACL,MAAMA,GAAQM,GAAG,YAAnD,UACI,sBAAKF,UAAU,OAAOE,GAAG,OAAzB,cACMR,EADN,OAGA,sBAAKM,UAAU,QAAQE,GAAG,SAA1B,cACMP,EADN,OAGA,sBAAKK,UAAU,UAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,mBAAGG,KAAQL,EAAaG,MAAS,CAACG,gBAAgBR,GAAlD,SAA0D,mBAAGI,UAAU,qBACvE,mBAAGG,KAAMJ,EAAWE,MAAS,CAACG,gBAAgBR,GAA9C,SAAsD,mBAAGI,UAAU,uBAEvE,wBAAQC,MAAS,CAACG,gBAAgBR,GAAQS,QAASR,EAAnD,+BCaLS,MAjCf,WAAgB,IAAD,EACcC,mBAAS,QAAD,OAAuB,IAAdC,KAAKC,SAAa,EAA3B,YAA8C,IAAdD,KAAKC,SAAa,EAAlD,YAAqE,IAAdD,KAAKC,SAAa,EAAzE,UADtB,mBACJb,EADI,KACEc,EADF,OAEcH,mBAAS,IAFvB,mBAEJZ,EAFI,KAEEgB,EAFF,OAGYJ,mBAAS,IAHrB,mBAGJK,EAHI,KAGCC,EAHD,OAIcN,mBAAS,IAJvB,mBAIJO,EAJI,KAIEC,EAJF,KAKPC,EAAc,EAqBlB,OAnBAC,qBAAU,WAENC,MAAM,+BACDC,MAAK,SAASC,GACX,OAAOA,EAASC,UAEnBF,MAAK,SAASP,GACXC,EAAQ,YAAID,IACZG,EAASH,EAAKI,GAAatB,MAC3BiB,EAASC,EAAKI,GAAaM,aAErC,IASE,qBAAKtB,UAAU,MAAMC,MAAO,CAACG,gBAAkBR,GAA/C,SACC,cAAC,EAAD,CAAOD,MAAOA,EAAOD,KAAMoB,EAAOlB,MAASA,EAAOC,YAR9B,WACrBa,EAAS,QAAD,OAAuB,IAAdF,KAAKC,SAAa,EAA3B,YAA8C,IAAdD,KAAKC,SAAa,EAAlD,YAAqE,IAAdD,KAAKC,SAAa,EAAzE,UACRO,EAAcR,KAAKe,MAAuB,KAAhBf,KAAKC,SAAiB,GAChDM,EAASH,EAAKI,GAAatB,MAC3BiB,EAASC,EAAKI,GAAaM,cCnBpBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BZ,M","file":"static/js/main.ed5895cb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n import  './quote.component.scss'\r\n\r\nconst Quote = ({text, autor, color,handleClick})=>{\r\n    const linkTwitter = `https://twitter.com/intent/tweet?hashtags=quotes&text=\"${text}\"%20${autor}`;\r\n\r\n    // <a className=\"button\" id=\"tumblr-quote\" title=\"Post this quote on tumblr!\" target=\"_blank\"\r\n    //    href=\"https://www.tumblr.com/widgets/share/tool?posttype=quote&amp;tags=quotes,freecodecamp&amp;caption=Christopher%20Columbus&amp;content=You%20can%20never%20cross%20the%20ocean%20until%20you%20have%20the%20courage%20to%20lose%20sight%20of%20the%20shore.&amp;canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&amp;shareSource=tumblr_share_button\"\r\n    //    style=\"background-color: rgb(189, 187, 153);\">\r\n    //     <i className=\"fa fa-tumblr\"></i>\r\n    // </a>\r\n\r\n    const linkTmblr = `https://www.tumblr.com/widgets/share/tool?posttype=quote&caption=${autor}&content=${text}&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&amp;shareSource=tumblr_share_button`;\r\n    return(\r\n            <div className='wrapper'style = {{color:color}} id=\"quote-box\" >\r\n                <div className='text' id=\"text\">\r\n                    \"{text}\"\r\n                </div>\r\n                <div className='autor' id=\"author\">\r\n                    -{autor}-\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <div className=\"sotialNetwork\">\r\n                        <a href = {linkTwitter} style = {{backgroundColor:color}}><i className=\"fab fa-twitter\"></i></a>\r\n                        <a href={linkTmblr} style = {{backgroundColor:color}}><i className=\"fab fa-tumblr\"></i></a>\r\n                    </div>\r\n                    <button style = {{backgroundColor:color}} onClick={handleClick}>\r\n                        New quote\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Quote;","import React,{useState, useEffect} from 'react'\r\n\r\nimport './App.css';\r\n\r\nimport Quote from \"./components/quote/Quote.component\";\r\n\r\n\r\nfunction App() {\r\n    const [color,setColor] = useState(`rgba(${Math.random()*255+1},${Math.random()*255+1},${Math.random()*255+1},0.6)`)\r\n    const [autor,setAutor] = useState('')\r\n    const [data,setData] = useState([])\r\n    const [quote,setQuote] = useState('')\r\n    let randomIndex = 0\r\n\r\n    useEffect(()=>{\r\n\r\n        fetch(\"https://type.fit/api/quotes\")\r\n            .then(function(response) {\r\n                return response.json();\r\n            })\r\n            .then(function(data) {\r\n                setData([...data])\r\n                setQuote(data[randomIndex].text)\r\n                setAutor(data[randomIndex].author)\r\n            });\r\n    },[])\r\n\r\n    const changeQuoteClick = () => {\r\n        setColor(`rgba(${Math.random()*255+1},${Math.random()*255+1},${Math.random()*255+1},0.6)`)\r\n        randomIndex = Math.floor( Math.random() * 1642 +1);\r\n        setQuote(data[randomIndex].text)\r\n        setAutor(data[randomIndex].author)\r\n    }\r\n    return (\r\n        <div className=\"App\" style={{backgroundColor : color}}>\r\n         <Quote autor={autor} text={quote} color = {color} handleClick={changeQuoteClick}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// add comment\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}